//Here target sum is given as k and we have to find triplet whose sum is equal to the given sum.

import java.util.*;
class practice{
   static ArrayList<List<Integer>> KMaxSubArray(int arr[],int k){
       ArrayList<List<Integer>> al=new ArrayList<>();
       for(int i=0;i<arr.length-2;i++){
          int sum=k-arr[i];
          int start=i+1;
          int end=arr.length-1;
          while(start<end){
            int t=arr[start]+arr[end];
            if(t==sum){
                al.add(Arrays.asList(arr[i],arr[start],arr[end]));
                start++;
                end--;
            }else if(t<sum){
                start++;
            }else{
                end--;
            }
          }
        }
       return al;
   }

  public static void main(String args[]) {
      int arr[] ={ 3, 2, -7, 6, -2, 4, -1};
      System.out.println(KMaxSubArray(arr,3));
  }
}

//Here we need to find triplet whose sum is less than the given sum
import java.util.*;
class practice{
   static int KMaxSubArray(int arr[],int k){
       Arrays.sort(arr);
       int tripletCount=0;
       for(int i=0;i<arr.length-2;i++){
          int start=i+1;
          int end=arr.length-1;
          while(start<end){
            int t=arr[i]+arr[start]+arr[end];
            if(t<k){
                tripletCount=tripletCount+end-start;
                start++;
            }else{
                end--;
            }
          }
        }
       return tripletCount;
   }

  public static void main(String args[]) {
      int arr[] ={ 3, 2, -7, 6, -2, 4, -1};
      System.out.println(KMaxSubArray(arr,3));
  }
}
