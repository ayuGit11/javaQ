/*In each recursive call, the search space is divided in half, which leads to a logarithmic time complexity. The binary search algorithm efficiently reduces
the search space with each comparison, making it significantly faster than linear search for large datasets. */


class practice{
   static int BinarySearch(int i,int j,int arr[],int key) {
      if(i <= j){
         int mid = i + (j - i) / 2;
         if(key == arr[mid]){
            return mid;
         } 
         else if(key < arr[mid]){
             return BinarySearch(i, mid - 1, arr, key);
         } 
         else{
             return BinarySearch(mid + 1, j, arr, key);
         }
     }
      return -1;
   }

  public static void main(String args[]) {
      int arr[] = {11,12,22,33,55};
      System.out.println(BinarySearch(0,arr.length,arr,12));
  }
}
